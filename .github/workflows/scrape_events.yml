# 此工作流程的名稱
name: Scrape Kai Tak Events

on:
  # 定時觸發：每小時的第 0 分鐘運行一次
  schedule:
    - cron: '0 * * * *'
  # 允許您在 GitHub Actions 頁面手動觸發此工作流程
  workflow_dispatch:

jobs:
  scrape:
    # 在最新的 Ubuntu 虛擬機上運行
    runs-on: ubuntu-latest
    steps:
      # 步驟 1: 下載您的程式碼
      - name: Check out repository
        uses: actions/checkout@v4

      # 步驟 2: 設定 Python 環境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 步驟 3: 安裝依賴套件
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 步驟 4: 運行我們的抓取腳本
      - name: Run scraper to fetch event data
        run: python scraper.py

      # 步驟 5: 如果 total_events.json 有變更，就提交並推送到倉庫
      - name: Commit and push if data has changed
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add total_events.json
          # 檢查是否有變更，只有在有變更時才提交
          git diff-index --quiet HEAD || git commit -m "Update event data"
          git push
